---
networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana-storage: {}

services:
  traefik:
    image: traefik:v3.2
    container_name: traefik
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "8000:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    network_mode: host
    environment:
      - PUID=1100
      - PGID=1100
      - TZ=Etc/UTC
      - VERSION=docker
    volumes:
      - /host/config/plex:/config
      - /host/media:/data/media
    restart: unless-stopped
    labels:
      - "traefik.http.routers.plex.rule=Host(`plex.homelab.lan`)"
      - "traefik.http.services.plex.loadbalancer.server.port=32400"

  transmission-openvpn:
    image: haugene/transmission-openvpn
    container_name: transmission-openvpn
    cap_add:
      - NET_ADMIN
    sysctls:
      - 'net.ipv6.conf.all.disable_ipv6=0'
    volumes:
      - '/host/media/:/data'
      - '/host/config/transmission-openvpn/:/config'
    environment:
      - PUID=1100
      - PGID=1100
      - TZ=Etc/UTC      
      - OPENVPN_PROVIDER=MULLVAD
      - OPENVPN_CONFIG=cz_prg
      - OPENVPN_USERNAME=${VPN_ID}
      - OPENVPN_PASSWORD=m
      - LOCAL_NETWORK=${LOCAL_NETWORK}
    logging:
      driver: json-file
      options:
        max-size: 10m
    ports:
      - '19091:9091'

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1100
      - PGID=1100
      - TZ=Etc/UTC
    volumes:
      - /host/config/radarr:/config
      - /host/media/movies:/movies #optional
      - /host/media:/downloads #optional
    ports:
      - 7878:7878
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - /host/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.homelab.lan`)"

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    expose:
      - '3000'
    volumes:
      - grafana-storage:/var/lib/grafana
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.homelab.lan`)"

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    network_mode: host
    environment:
      #DNSMASQ_USER: root 
      #PIHOLE_UID: 0
      INTERFACE: wlx90de8004fdad
      PUID: 1100
      PGID: 1100
      TZ: 'EST'
      WEBPASSWORD: ${PIHOLE_PASSWORD}
    volumes:
      - '/host/config/pihole/etc-pihole:/etc/pihole'
      - '/host/config/pihole/etc-dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    labels:
      - "traefik.http.services.pihole.loadbalancer.server.port=80"

